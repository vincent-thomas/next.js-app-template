name: Pipeline

on:
  push:
    branches: [main]
  pull_request: 
    branches: [main]

env:
  NEXT_TELEMETRY_DISABLED: "1"
  IMAGE_NAME: example-docker

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - uses: actions/setup-node@v4
        with:
          node-version: '20'


      - run: bun install --frozen-lockfile
      - run: bun run lint
      - run: npm run test
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - run: bun install --frozen-lockfile
      - run: SKIP_ENV_VALIDATION='1' bun run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_TOKEN: ${{ secrets.DATABASE_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: app-bundle
          path: |
            .next/static
            .next/standalone
            public
            Dockerfile
          retention-days: 1
          overwrite: true

  deploy:
    if: github.event_name == 'push' && github.ref_name == 'main'
    permissions:
      packages: write
      contents: read
    needs:
      - test
      - build
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-bundle

      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: docker build -t $IMAGE_NAME .
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION